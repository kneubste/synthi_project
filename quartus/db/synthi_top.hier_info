|synthi_top
CLOCK_50 => infrastructure:infrastructure_1.clock_50
KEY_0 => infrastructure:infrastructure_1.key_0
KEY_1 => ~NO_FANOUT~
SW[0] => codec_controller:codec_controller_1.mode[0]
SW[1] => codec_controller:codec_controller_1.mode[1]
SW[2] => codec_controller:codec_controller_1.mode[2]
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
USB_RXD => ~NO_FANOUT~
USB_TXD => infrastructure:infrastructure_1.usb_txd
BT_RXD => ~NO_FANOUT~
BT_TXD => ~NO_FANOUT~
BT_RST_N => ~NO_FANOUT~
AUD_XCK << AUD_XCK.DB_MAX_OUTPUT_PORT_TYPE
AUD_DACDAT << AUD_DACDAT.DB_MAX_OUTPUT_PORT_TYPE
AUD_BCLK << AUD_BCLK.DB_MAX_OUTPUT_PORT_TYPE
AUD_DACLRCK << AUD_DACLRCK.DB_MAX_OUTPUT_PORT_TYPE
AUD_ADCLRCK << comb.DB_MAX_OUTPUT_PORT_TYPE
AUD_ADCDAT => ~NO_FANOUT~
AUD_SCLK << i2c_master:i2c_master_1.scl_o
AUD_SDAT <> i2c_master:i2c_master_1.sda_io
LEDR_0 << infrastructure:infrastructure_1.ledr_0
HEX0[0] << uart_top:uart_top_1.seg0_o[0]
HEX0[1] << uart_top:uart_top_1.seg0_o[1]
HEX0[2] << uart_top:uart_top_1.seg0_o[2]
HEX0[3] << uart_top:uart_top_1.seg0_o[3]
HEX0[4] << uart_top:uart_top_1.seg0_o[4]
HEX0[5] << uart_top:uart_top_1.seg0_o[5]
HEX0[6] << uart_top:uart_top_1.seg0_o[6]
HEX1[0] << uart_top:uart_top_1.seg1_o[0]
HEX1[1] << uart_top:uart_top_1.seg1_o[1]
HEX1[2] << uart_top:uart_top_1.seg1_o[2]
HEX1[3] << uart_top:uart_top_1.seg1_o[3]
HEX1[4] << uart_top:uart_top_1.seg1_o[4]
HEX1[5] << uart_top:uart_top_1.seg1_o[5]
HEX1[6] << uart_top:uart_top_1.seg1_o[6]


|synthi_top|uart_top:uart_top_1
clk => output_register:b2v_inst.clk
clk => shiftreg_uart:b2v_inst11.clk
clk => uart_controller_fsm:b2v_inst3.clk
clk => baud_tick:b2v_inst5.clk
clk => bit_counter:b2v_inst6.clk
clk => flanken_detekt_vhdl:b2v_inst7.clk
reset_n => output_register:b2v_inst.reset_n
reset_n => shiftreg_uart:b2v_inst11.reset_n
reset_n => uart_controller_fsm:b2v_inst3.reset_n
reset_n => baud_tick:b2v_inst5.reset_n
reset_n => bit_counter:b2v_inst6.reset_n
reset_n => flanken_detekt_vhdl:b2v_inst7.reset_n
ser_data_i => shiftreg_uart:b2v_inst11.serial_in
ser_data_i => flanken_detekt_vhdl:b2v_inst7.data_in
rx_data_rdy <= uart_controller_fsm:b2v_inst3.data_valid
seg0_o[0] <= bus_hex2sevseg:b2v_inst14.seg_o[0]
seg0_o[1] <= bus_hex2sevseg:b2v_inst14.seg_o[1]
seg0_o[2] <= bus_hex2sevseg:b2v_inst14.seg_o[2]
seg0_o[3] <= bus_hex2sevseg:b2v_inst14.seg_o[3]
seg0_o[4] <= bus_hex2sevseg:b2v_inst14.seg_o[4]
seg0_o[5] <= bus_hex2sevseg:b2v_inst14.seg_o[5]
seg0_o[6] <= bus_hex2sevseg:b2v_inst14.seg_o[6]
seg1_o[0] <= bus_hex2sevseg:b2v_inst15.seg_o[0]
seg1_o[1] <= bus_hex2sevseg:b2v_inst15.seg_o[1]
seg1_o[2] <= bus_hex2sevseg:b2v_inst15.seg_o[2]
seg1_o[3] <= bus_hex2sevseg:b2v_inst15.seg_o[3]
seg1_o[4] <= bus_hex2sevseg:b2v_inst15.seg_o[4]
seg1_o[5] <= bus_hex2sevseg:b2v_inst15.seg_o[5]
seg1_o[6] <= bus_hex2sevseg:b2v_inst15.seg_o[6]
rx_data[0] <= shiftreg_uart:b2v_inst11.parallel_out[1]
rx_data[1] <= shiftreg_uart:b2v_inst11.parallel_out[2]
rx_data[2] <= shiftreg_uart:b2v_inst11.parallel_out[3]
rx_data[3] <= shiftreg_uart:b2v_inst11.parallel_out[4]
rx_data[4] <= shiftreg_uart:b2v_inst11.parallel_out[5]
rx_data[5] <= shiftreg_uart:b2v_inst11.parallel_out[6]
rx_data[6] <= shiftreg_uart:b2v_inst11.parallel_out[7]
rx_data[7] <= shiftreg_uart:b2v_inst11.parallel_out[8]


|synthi_top|uart_top:uart_top_1|output_register:b2v_inst
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
data_valid => count[1].ENA
data_valid => count[8].ENA
data_valid => count[7].ENA
data_valid => count[6].ENA
data_valid => count[5].ENA
data_valid => count[4].ENA
data_valid => count[3].ENA
data_valid => count[2].ENA
parallel_in[0] => ~NO_FANOUT~
parallel_in[1] => count[1].DATAIN
parallel_in[2] => count[2].DATAIN
parallel_in[3] => count[3].DATAIN
parallel_in[4] => count[4].DATAIN
parallel_in[5] => count[5].DATAIN
parallel_in[6] => count[6].DATAIN
parallel_in[7] => count[7].DATAIN
parallel_in[8] => count[8].DATAIN
parallel_in[9] => ~NO_FANOUT~
hex_lsb_out[0] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
hex_lsb_out[1] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
hex_lsb_out[2] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
hex_lsb_out[3] <= count[4].DB_MAX_OUTPUT_PORT_TYPE
hex_msb_out[0] <= count[5].DB_MAX_OUTPUT_PORT_TYPE
hex_msb_out[1] <= count[6].DB_MAX_OUTPUT_PORT_TYPE
hex_msb_out[2] <= count[7].DB_MAX_OUTPUT_PORT_TYPE
hex_msb_out[3] <= count[8].DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|uart_top:uart_top_1|shiftreg_uart:b2v_inst11
clk => shiftreg[0].CLK
clk => shiftreg[1].CLK
clk => shiftreg[2].CLK
clk => shiftreg[3].CLK
clk => shiftreg[4].CLK
clk => shiftreg[5].CLK
clk => shiftreg[6].CLK
clk => shiftreg[7].CLK
clk => shiftreg[8].CLK
clk => shiftreg[9].CLK
reset_n => shiftreg[0].ACLR
reset_n => shiftreg[1].ACLR
reset_n => shiftreg[2].ACLR
reset_n => shiftreg[3].ACLR
reset_n => shiftreg[4].ACLR
reset_n => shiftreg[5].ACLR
reset_n => shiftreg[6].ACLR
reset_n => shiftreg[7].ACLR
reset_n => shiftreg[8].ACLR
reset_n => shiftreg[9].ACLR
load_in => next_shiftreg[9].OUTPUTSELECT
load_in => next_shiftreg[8].OUTPUTSELECT
load_in => next_shiftreg[7].OUTPUTSELECT
load_in => next_shiftreg[6].OUTPUTSELECT
load_in => next_shiftreg[5].OUTPUTSELECT
load_in => next_shiftreg[4].OUTPUTSELECT
load_in => next_shiftreg[3].OUTPUTSELECT
load_in => next_shiftreg[2].OUTPUTSELECT
load_in => next_shiftreg[1].OUTPUTSELECT
load_in => next_shiftreg[0].OUTPUTSELECT
serial_in => next_shiftreg.DATAB
shift_enable => next_shiftreg.OUTPUTSELECT
shift_enable => next_shiftreg.OUTPUTSELECT
shift_enable => next_shiftreg.OUTPUTSELECT
shift_enable => next_shiftreg.OUTPUTSELECT
shift_enable => next_shiftreg.OUTPUTSELECT
shift_enable => next_shiftreg.OUTPUTSELECT
shift_enable => next_shiftreg.OUTPUTSELECT
shift_enable => next_shiftreg.OUTPUTSELECT
shift_enable => next_shiftreg.OUTPUTSELECT
shift_enable => next_shiftreg.OUTPUTSELECT
parallel_in[0] => next_shiftreg[0].DATAB
parallel_in[1] => next_shiftreg[1].DATAB
parallel_in[2] => next_shiftreg[2].DATAB
parallel_in[3] => next_shiftreg[3].DATAB
parallel_in[4] => next_shiftreg[4].DATAB
parallel_in[5] => next_shiftreg[5].DATAB
parallel_in[6] => next_shiftreg[6].DATAB
parallel_in[7] => next_shiftreg[7].DATAB
parallel_in[8] => next_shiftreg[8].DATAB
parallel_in[9] => next_shiftreg[9].DATAB
serial_out <= shiftreg[0].DB_MAX_OUTPUT_PORT_TYPE
parallel_out[0] <= shiftreg[0].DB_MAX_OUTPUT_PORT_TYPE
parallel_out[1] <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
parallel_out[2] <= shiftreg[2].DB_MAX_OUTPUT_PORT_TYPE
parallel_out[3] <= shiftreg[3].DB_MAX_OUTPUT_PORT_TYPE
parallel_out[4] <= shiftreg[4].DB_MAX_OUTPUT_PORT_TYPE
parallel_out[5] <= shiftreg[5].DB_MAX_OUTPUT_PORT_TYPE
parallel_out[6] <= shiftreg[6].DB_MAX_OUTPUT_PORT_TYPE
parallel_out[7] <= shiftreg[7].DB_MAX_OUTPUT_PORT_TYPE
parallel_out[8] <= shiftreg[8].DB_MAX_OUTPUT_PORT_TYPE
parallel_out[9] <= shiftreg[9].DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|uart_top:uart_top_1|bus_hex2sevseg:b2v_inst14
data_in[0] => Mux0.IN19
data_in[0] => Mux1.IN19
data_in[0] => Mux2.IN19
data_in[0] => Mux3.IN19
data_in[0] => Mux4.IN19
data_in[0] => Mux5.IN19
data_in[0] => Mux6.IN19
data_in[1] => Mux0.IN18
data_in[1] => Mux1.IN18
data_in[1] => Mux2.IN18
data_in[1] => Mux3.IN18
data_in[1] => Mux4.IN18
data_in[1] => Mux5.IN18
data_in[1] => Mux6.IN18
data_in[2] => Mux0.IN17
data_in[2] => Mux1.IN17
data_in[2] => Mux2.IN17
data_in[2] => Mux3.IN17
data_in[2] => Mux4.IN17
data_in[2] => Mux5.IN17
data_in[2] => Mux6.IN17
data_in[3] => Mux0.IN16
data_in[3] => Mux1.IN16
data_in[3] => Mux2.IN16
data_in[3] => Mux3.IN16
data_in[3] => Mux4.IN16
data_in[3] => Mux5.IN16
data_in[3] => Mux6.IN16
seg_o[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
seg_o[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
seg_o[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
seg_o[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
seg_o[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
seg_o[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
seg_o[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|uart_top:uart_top_1|bus_hex2sevseg:b2v_inst15
data_in[0] => Mux0.IN19
data_in[0] => Mux1.IN19
data_in[0] => Mux2.IN19
data_in[0] => Mux3.IN19
data_in[0] => Mux4.IN19
data_in[0] => Mux5.IN19
data_in[0] => Mux6.IN19
data_in[1] => Mux0.IN18
data_in[1] => Mux1.IN18
data_in[1] => Mux2.IN18
data_in[1] => Mux3.IN18
data_in[1] => Mux4.IN18
data_in[1] => Mux5.IN18
data_in[1] => Mux6.IN18
data_in[2] => Mux0.IN17
data_in[2] => Mux1.IN17
data_in[2] => Mux2.IN17
data_in[2] => Mux3.IN17
data_in[2] => Mux4.IN17
data_in[2] => Mux5.IN17
data_in[2] => Mux6.IN17
data_in[3] => Mux0.IN16
data_in[3] => Mux1.IN16
data_in[3] => Mux2.IN16
data_in[3] => Mux3.IN16
data_in[3] => Mux4.IN16
data_in[3] => Mux5.IN16
data_in[3] => Mux6.IN16
seg_o[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
seg_o[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
seg_o[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
seg_o[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
seg_o[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
seg_o[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
seg_o[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|uart_top:uart_top_1|uart_controller_fsm:b2v_inst3
clk => fsm_state~1.DATAIN
reset_n => fsm_state~3.DATAIN
falling_pulse => Selector1.IN3
falling_pulse => Selector0.IN1
baud_tick => state_logic.IN1
baud_tick => shift_enable.DATAB
bit_count[0] => Equal0.IN9
bit_count[1] => Equal0.IN8
bit_count[2] => Equal0.IN7
bit_count[3] => Equal0.IN6
bit_count[4] => Equal0.IN5
bit_count[5] => Equal0.IN4
bit_count[6] => Equal0.IN3
bit_count[7] => Equal0.IN2
bit_count[8] => Equal0.IN1
bit_count[9] => Equal0.IN0
parallel_data[0] => fsm_out_logic.IN0
parallel_data[1] => ~NO_FANOUT~
parallel_data[2] => ~NO_FANOUT~
parallel_data[3] => ~NO_FANOUT~
parallel_data[4] => ~NO_FANOUT~
parallel_data[5] => ~NO_FANOUT~
parallel_data[6] => ~NO_FANOUT~
parallel_data[7] => ~NO_FANOUT~
parallel_data[8] => ~NO_FANOUT~
parallel_data[9] => fsm_out_logic.IN1
shift_enable <= shift_enable.DB_MAX_OUTPUT_PORT_TYPE
start_bit <= start_bit.DB_MAX_OUTPUT_PORT_TYPE
data_valid <= data_valid.DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|uart_top:uart_top_1|baud_tick:b2v_inst5
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
reset_n => count[9].ACLR
start_bit => next_count[9].OUTPUTSELECT
start_bit => next_count[8].OUTPUTSELECT
start_bit => next_count[7].OUTPUTSELECT
start_bit => next_count[6].OUTPUTSELECT
start_bit => next_count[5].OUTPUTSELECT
start_bit => next_count[4].OUTPUTSELECT
start_bit => next_count[3].OUTPUTSELECT
start_bit => next_count[2].OUTPUTSELECT
start_bit => next_count[1].OUTPUTSELECT
start_bit => next_count[0].OUTPUTSELECT
baud_tick <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|uart_top:uart_top_1|bit_counter:b2v_inst6
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
reset_n => count[9].ACLR
start_bit => next_count[9].OUTPUTSELECT
start_bit => next_count[8].OUTPUTSELECT
start_bit => next_count[7].OUTPUTSELECT
start_bit => next_count[6].OUTPUTSELECT
start_bit => next_count[5].OUTPUTSELECT
start_bit => next_count[4].OUTPUTSELECT
start_bit => next_count[3].OUTPUTSELECT
start_bit => next_count[2].OUTPUTSELECT
start_bit => next_count[1].OUTPUTSELECT
start_bit => next_count[0].OUTPUTSELECT
baud_tick => comb_logic.IN1
bit_count[0] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
bit_count[1] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
bit_count[2] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
bit_count[3] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
bit_count[4] <= count[4].DB_MAX_OUTPUT_PORT_TYPE
bit_count[5] <= count[5].DB_MAX_OUTPUT_PORT_TYPE
bit_count[6] <= count[6].DB_MAX_OUTPUT_PORT_TYPE
bit_count[7] <= count[7].DB_MAX_OUTPUT_PORT_TYPE
bit_count[8] <= count[8].DB_MAX_OUTPUT_PORT_TYPE
bit_count[9] <= count[9].DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|uart_top:uart_top_1|flanken_detekt_vhdl:b2v_inst7
data_in => q_0.DATAIN
clk => q_1.CLK
clk => q_0.CLK
reset_n => q_1.ACLR
reset_n => q_0.ACLR
rising_pulse <= rising_pulse.DB_MAX_OUTPUT_PORT_TYPE
falling_pulse <= falling_pulse.DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|infrastructure:infrastructure_1
clock_50 => modulo_divider:modulo_divider_1.clk
clock_50 => signal_checker:signal_checker_1.clk
key_0 => clock_sync:clock_sync_1.data_in
key_0 => signal_checker:signal_checker_1.reset_n
usb_txd => clock_sync:clock_sync_2.data_in
usb_txd => signal_checker:signal_checker_1.data_in
clk_12m <= modulo_divider:modulo_divider_1.clk_div
reset_n <= clock_sync:clock_sync_1.sync_out
usb_txd_sync <= clock_sync:clock_sync_2.sync_out
ledr_0 <= signal_checker:signal_checker_1.led_blink


|synthi_top|infrastructure:infrastructure_1|modulo_divider:modulo_divider_1
clk => count[0].CLK
clk => count[1].CLK
clk_div <= count[1].DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|infrastructure:infrastructure_1|clock_sync:clock_sync_1
data_in => q_0.DATAIN
clk => q_1.CLK
clk => q_0.CLK
sync_out <= q_1.DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|infrastructure:infrastructure_1|clock_sync:clock_sync_2
data_in => q_0.DATAIN
clk => q_1.CLK
clk => q_0.CLK
sync_out <= q_1.DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|infrastructure:infrastructure_1|signal_checker:signal_checker_1
clk => pulse_count[0].CLK
clk => pulse_count[1].CLK
clk => pulse_count[2].CLK
clk => pulse_count[3].CLK
clk => pulse_count[4].CLK
clk => pulse_count[5].CLK
clk => pulse_count[6].CLK
clk => pulse_count[7].CLK
clk => sync_q3.CLK
clk => sync_q2.CLK
clk => sync_q1.CLK
clk => bit_count_i[0].CLK
clk => bit_count_i[1].CLK
clk => bit_count_i[2].CLK
clk => bit_count_i[3].CLK
clk => bit_count_i[4].CLK
clk => bit_count_i[5].CLK
clk => bit_count_i[6].CLK
clk => bit_count_i[7].CLK
clk => bit_count_i[8].CLK
clk => bit_count_i[9].CLK
clk => bit_count_i[10].CLK
clk => bit_count_i[11].CLK
clk => bit_count_i[12].CLK
clk => bit_count_i[13].CLK
clk => bit_count_i[14].CLK
clk => bit_count_i[15].CLK
clk => bit_count_i[16].CLK
clk => bit_count_i[17].CLK
clk => bit_count_i[18].CLK
clk => bit_count_i[19].CLK
clk => bit_count_i[20].CLK
clk => bit_count_i[21].CLK
clk => bit_count_i[22].CLK
reset_n => pulse_count[0].ACLR
reset_n => pulse_count[1].ACLR
reset_n => pulse_count[2].ACLR
reset_n => pulse_count[3].ACLR
reset_n => pulse_count[4].ACLR
reset_n => pulse_count[5].ACLR
reset_n => pulse_count[6].ACLR
reset_n => pulse_count[7].ACLR
reset_n => sync_q3.PRESET
reset_n => sync_q2.PRESET
reset_n => sync_q1.PRESET
reset_n => bit_count_i[0].ACLR
reset_n => bit_count_i[1].ACLR
reset_n => bit_count_i[2].ACLR
reset_n => bit_count_i[3].ACLR
reset_n => bit_count_i[4].ACLR
reset_n => bit_count_i[5].ACLR
reset_n => bit_count_i[6].ACLR
reset_n => bit_count_i[7].ACLR
reset_n => bit_count_i[8].ACLR
reset_n => bit_count_i[9].ACLR
reset_n => bit_count_i[10].ACLR
reset_n => bit_count_i[11].ACLR
reset_n => bit_count_i[12].ACLR
reset_n => bit_count_i[13].ACLR
reset_n => bit_count_i[14].ACLR
reset_n => bit_count_i[15].ACLR
reset_n => bit_count_i[16].ACLR
reset_n => bit_count_i[17].ACLR
reset_n => bit_count_i[18].ACLR
reset_n => bit_count_i[19].ACLR
reset_n => bit_count_i[20].ACLR
reset_n => bit_count_i[21].ACLR
reset_n => bit_count_i[22].ACLR
data_in => sync_q1.DATAIN
led_blink <= bit_count_i[22].DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|i2c_master:i2c_master_1
clk => write_done.CLK
clk => ack_error.CLK
clk => byte_count[0].CLK
clk => byte_count[1].CLK
clk => ack.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => data[8].CLK
clk => data[9].CLK
clk => data[10].CLK
clk => data[11].CLK
clk => data[12].CLK
clk => data[13].CLK
clk => data[14].CLK
clk => data[15].CLK
clk => data[16].CLK
clk => data[17].CLK
clk => data[18].CLK
clk => data[19].CLK
clk => data[20].CLK
clk => data[21].CLK
clk => data[22].CLK
clk => data[23].CLK
clk => sda.CLK
clk => scl.CLK
clk => clk_edge_mask[0].CLK
clk => clk_edge_mask[1].CLK
clk => clk_edge_mask[2].CLK
clk => clk_mask[0].CLK
clk => clk_mask[1].CLK
clk => clk_divider[0].CLK
clk => clk_divider[1].CLK
clk => clk_divider[2].CLK
clk => clk_divider[3].CLK
clk => clk_divider[4].CLK
clk => fsm_state~1.DATAIN
reset_n => write_done.ACLR
reset_n => ack_error.ACLR
reset_n => byte_count[0].ACLR
reset_n => byte_count[1].ACLR
reset_n => ack.ACLR
reset_n => bit_count[0].ACLR
reset_n => bit_count[1].ACLR
reset_n => bit_count[2].ACLR
reset_n => data[0].ACLR
reset_n => data[1].ACLR
reset_n => data[2].ACLR
reset_n => data[3].ACLR
reset_n => data[4].ACLR
reset_n => data[5].ACLR
reset_n => data[6].ACLR
reset_n => data[7].ACLR
reset_n => data[8].ACLR
reset_n => data[9].ACLR
reset_n => data[10].ACLR
reset_n => data[11].ACLR
reset_n => data[12].ACLR
reset_n => data[13].ACLR
reset_n => data[14].ACLR
reset_n => data[15].ACLR
reset_n => data[16].ACLR
reset_n => data[17].ACLR
reset_n => data[18].ACLR
reset_n => data[19].ACLR
reset_n => data[20].ACLR
reset_n => data[21].ACLR
reset_n => data[22].ACLR
reset_n => data[23].ACLR
reset_n => sda.PRESET
reset_n => scl.PRESET
reset_n => clk_edge_mask[0].ACLR
reset_n => clk_edge_mask[1].ACLR
reset_n => clk_edge_mask[2].ACLR
reset_n => clk_mask[0].ACLR
reset_n => clk_mask[1].ACLR
reset_n => clk_divider[0].ACLR
reset_n => clk_divider[1].ACLR
reset_n => clk_divider[2].ACLR
reset_n => clk_divider[3].ACLR
reset_n => clk_divider[4].ACLR
reset_n => fsm_state~3.DATAIN
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_data_i[0] => next_data.DATAB
write_data_i[1] => next_data.DATAB
write_data_i[2] => next_data.DATAB
write_data_i[3] => next_data.DATAB
write_data_i[4] => next_data.DATAB
write_data_i[5] => next_data.DATAB
write_data_i[6] => next_data.DATAB
write_data_i[7] => next_data.DATAB
write_data_i[8] => next_data.DATAB
write_data_i[9] => next_data.DATAB
write_data_i[10] => next_data.DATAB
write_data_i[11] => next_data.DATAB
write_data_i[12] => next_data.DATAB
write_data_i[13] => next_data.DATAB
write_data_i[14] => next_data.DATAB
write_data_i[15] => next_data.DATAB
sda_io <> sda_io
scl_o <= scl.DB_MAX_OUTPUT_PORT_TYPE
write_done_o <= write_done.DB_MAX_OUTPUT_PORT_TYPE
ack_error_o <= ack_error.DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|codec_controller:codec_controller_1
mode[0] => Mux15.IN10
mode[0] => Mux16.IN10
mode[0] => Mux17.IN10
mode[0] => Mux18.IN10
mode[0] => Mux19.IN10
mode[0] => Mux20.IN10
mode[1] => Mux15.IN9
mode[1] => Mux16.IN9
mode[1] => Mux17.IN9
mode[1] => Mux18.IN9
mode[1] => Mux19.IN9
mode[1] => Mux20.IN9
mode[2] => Mux15.IN8
mode[2] => Mux16.IN8
mode[2] => Mux17.IN8
mode[2] => Mux18.IN8
mode[2] => Mux19.IN8
mode[2] => Mux20.IN8
write_done_i => fsm_state_logic.IN1
write_done_i => fsm_state_logic.IN1
ack_error_i => fsm_state_logic.IN1
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => fsm_state~1.DATAIN
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => fsm_state~3.DATAIN
write_o <= write_o.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[0] <= Mux20.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[1] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[2] <= Mux19.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[3] <= Mux18.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[4] <= Mux17.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[5] <= Mux16.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[6] <= Mux15.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[7] <= <GND>
write_data_o[8] <= <GND>
write_data_o[9] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
write_data_o[10] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
write_data_o[11] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
write_data_o[12] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
write_data_o[13] <= <GND>
write_data_o[14] <= <GND>
write_data_o[15] <= <GND>


|synthi_top|path_control:path_control_1
sw_sync_3 => ~NO_FANOUT~
dds_l_i[0] => ~NO_FANOUT~
dds_l_i[1] => ~NO_FANOUT~
dds_l_i[2] => ~NO_FANOUT~
dds_l_i[3] => ~NO_FANOUT~
dds_l_i[4] => ~NO_FANOUT~
dds_l_i[5] => ~NO_FANOUT~
dds_l_i[6] => ~NO_FANOUT~
dds_l_i[7] => ~NO_FANOUT~
dds_l_i[8] => ~NO_FANOUT~
dds_l_i[9] => ~NO_FANOUT~
dds_l_i[10] => ~NO_FANOUT~
dds_l_i[11] => ~NO_FANOUT~
dds_l_i[12] => ~NO_FANOUT~
dds_l_i[13] => ~NO_FANOUT~
dds_l_i[14] => ~NO_FANOUT~
dds_l_i[15] => ~NO_FANOUT~
dds_r_i[0] => ~NO_FANOUT~
dds_r_i[1] => ~NO_FANOUT~
dds_r_i[2] => ~NO_FANOUT~
dds_r_i[3] => ~NO_FANOUT~
dds_r_i[4] => ~NO_FANOUT~
dds_r_i[5] => ~NO_FANOUT~
dds_r_i[6] => ~NO_FANOUT~
dds_r_i[7] => ~NO_FANOUT~
dds_r_i[8] => ~NO_FANOUT~
dds_r_i[9] => ~NO_FANOUT~
dds_r_i[10] => ~NO_FANOUT~
dds_r_i[11] => ~NO_FANOUT~
dds_r_i[12] => ~NO_FANOUT~
dds_r_i[13] => ~NO_FANOUT~
dds_r_i[14] => ~NO_FANOUT~
dds_r_i[15] => ~NO_FANOUT~
adcdat_pl_i[0] => ~NO_FANOUT~
adcdat_pl_i[1] => ~NO_FANOUT~
adcdat_pl_i[2] => ~NO_FANOUT~
adcdat_pl_i[3] => ~NO_FANOUT~
adcdat_pl_i[4] => ~NO_FANOUT~
adcdat_pl_i[5] => ~NO_FANOUT~
adcdat_pl_i[6] => ~NO_FANOUT~
adcdat_pl_i[7] => ~NO_FANOUT~
adcdat_pl_i[8] => ~NO_FANOUT~
adcdat_pl_i[9] => ~NO_FANOUT~
adcdat_pl_i[10] => ~NO_FANOUT~
adcdat_pl_i[11] => ~NO_FANOUT~
adcdat_pl_i[12] => ~NO_FANOUT~
adcdat_pl_i[13] => ~NO_FANOUT~
adcdat_pl_i[14] => ~NO_FANOUT~
adcdat_pl_i[15] => ~NO_FANOUT~
adcdat_pr_i[0] => ~NO_FANOUT~
adcdat_pr_i[1] => ~NO_FANOUT~
adcdat_pr_i[2] => ~NO_FANOUT~
adcdat_pr_i[3] => ~NO_FANOUT~
adcdat_pr_i[4] => ~NO_FANOUT~
adcdat_pr_i[5] => ~NO_FANOUT~
adcdat_pr_i[6] => ~NO_FANOUT~
adcdat_pr_i[7] => ~NO_FANOUT~
adcdat_pr_i[8] => ~NO_FANOUT~
adcdat_pr_i[9] => ~NO_FANOUT~
adcdat_pr_i[10] => ~NO_FANOUT~
adcdat_pr_i[11] => ~NO_FANOUT~
adcdat_pr_i[12] => ~NO_FANOUT~
adcdat_pr_i[13] => ~NO_FANOUT~
adcdat_pr_i[14] => ~NO_FANOUT~
adcdat_pr_i[15] => ~NO_FANOUT~
dacdat_pl_o[0] <= dacdat_pl_o[0].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[1] <= dacdat_pl_o[1].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[2] <= dacdat_pl_o[2].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[3] <= dacdat_pl_o[3].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[4] <= dacdat_pl_o[4].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[5] <= dacdat_pl_o[5].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[6] <= dacdat_pl_o[6].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[7] <= dacdat_pl_o[7].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[8] <= dacdat_pl_o[8].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[9] <= dacdat_pl_o[9].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[10] <= dacdat_pl_o[10].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[11] <= dacdat_pl_o[11].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[12] <= dacdat_pl_o[12].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[13] <= dacdat_pl_o[13].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[14] <= dacdat_pl_o[14].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_o[15] <= dacdat_pl_o[15].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[1] <= dacdat_pr_o[1].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[2] <= dacdat_pr_o[2].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[3] <= dacdat_pr_o[3].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[4] <= dacdat_pr_o[4].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[5] <= dacdat_pr_o[5].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[6] <= dacdat_pr_o[6].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[7] <= dacdat_pr_o[7].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[8] <= dacdat_pr_o[8].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[9] <= dacdat_pr_o[9].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[10] <= dacdat_pr_o[10].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[11] <= dacdat_pr_o[11].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[12] <= dacdat_pr_o[12].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[13] <= dacdat_pr_o[13].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[14] <= dacdat_pr_o[14].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pr_o[15] <= dacdat_pr_o[15].DB_MAX_OUTPUT_PORT_TYPE


|synthi_top|i2s_master:i2s_master_1
clk_12m => ~NO_FANOUT~
reset_n => ~NO_FANOUT~
load_o <= load_o.DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[0] <= adcdat_pl_o[0].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[1] <= adcdat_pl_o[1].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[2] <= adcdat_pl_o[2].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[3] <= adcdat_pl_o[3].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[4] <= adcdat_pl_o[4].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[5] <= adcdat_pl_o[5].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[6] <= adcdat_pl_o[6].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[7] <= adcdat_pl_o[7].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[8] <= adcdat_pl_o[8].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[9] <= adcdat_pl_o[9].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[10] <= adcdat_pl_o[10].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[11] <= adcdat_pl_o[11].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[12] <= adcdat_pl_o[12].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[13] <= adcdat_pl_o[13].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[14] <= adcdat_pl_o[14].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pl_o[15] <= adcdat_pl_o[15].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[0] <= adcdat_pr_o[0].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[1] <= adcdat_pr_o[1].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[2] <= adcdat_pr_o[2].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[3] <= adcdat_pr_o[3].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[4] <= adcdat_pr_o[4].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[5] <= adcdat_pr_o[5].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[6] <= adcdat_pr_o[6].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[7] <= adcdat_pr_o[7].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[8] <= adcdat_pr_o[8].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[9] <= adcdat_pr_o[9].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[10] <= adcdat_pr_o[10].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[11] <= adcdat_pr_o[11].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[12] <= adcdat_pr_o[12].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[13] <= adcdat_pr_o[13].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[14] <= adcdat_pr_o[14].DB_MAX_OUTPUT_PORT_TYPE
adcdat_pr_o[15] <= adcdat_pr_o[15].DB_MAX_OUTPUT_PORT_TYPE
dacdat_pl_i[0] => ~NO_FANOUT~
dacdat_pl_i[1] => ~NO_FANOUT~
dacdat_pl_i[2] => ~NO_FANOUT~
dacdat_pl_i[3] => ~NO_FANOUT~
dacdat_pl_i[4] => ~NO_FANOUT~
dacdat_pl_i[5] => ~NO_FANOUT~
dacdat_pl_i[6] => ~NO_FANOUT~
dacdat_pl_i[7] => ~NO_FANOUT~
dacdat_pl_i[8] => ~NO_FANOUT~
dacdat_pl_i[9] => ~NO_FANOUT~
dacdat_pl_i[10] => ~NO_FANOUT~
dacdat_pl_i[11] => ~NO_FANOUT~
dacdat_pl_i[12] => ~NO_FANOUT~
dacdat_pl_i[13] => ~NO_FANOUT~
dacdat_pl_i[14] => ~NO_FANOUT~
dacdat_pl_i[15] => ~NO_FANOUT~
dacdat_pr_i[0] => ~NO_FANOUT~
dacdat_pr_i[1] => ~NO_FANOUT~
dacdat_pr_i[2] => ~NO_FANOUT~
dacdat_pr_i[3] => ~NO_FANOUT~
dacdat_pr_i[4] => ~NO_FANOUT~
dacdat_pr_i[5] => ~NO_FANOUT~
dacdat_pr_i[6] => ~NO_FANOUT~
dacdat_pr_i[7] => ~NO_FANOUT~
dacdat_pr_i[8] => ~NO_FANOUT~
dacdat_pr_i[9] => ~NO_FANOUT~
dacdat_pr_i[10] => ~NO_FANOUT~
dacdat_pr_i[11] => ~NO_FANOUT~
dacdat_pr_i[12] => ~NO_FANOUT~
dacdat_pr_i[13] => ~NO_FANOUT~
dacdat_pr_i[14] => ~NO_FANOUT~
dacdat_pr_i[15] => ~NO_FANOUT~
dacdat_s_o <= dacdat_s_o.DB_MAX_OUTPUT_PORT_TYPE
bclk_o <= bclk_o.DB_MAX_OUTPUT_PORT_TYPE
ws_o <= comb.DB_MAX_OUTPUT_PORT_TYPE
adcdat_s_i => ~NO_FANOUT~


